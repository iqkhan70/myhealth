<div class="nav-menu">
    <nav class="nav-menu-items">
        <a href="/" class="nav-item @(GetActiveClass("/"))">
            <i class="nav-icon">🏠</i>
            <span>Home</span>
        </a>

        @* Patient-specific pages *@
        @if (AuthService.CurrentUser?.RoleId == 1) // Patient
        {
            <a href="/journal" class="nav-item @(GetActiveClass("/journal"))">
                <i class="nav-icon">📝</i>
                <span>Journal</span>
            </a>
            <a href="/trends" class="nav-item @(GetActiveClass("/trends"))">
                <i class="nav-icon">📊</i>
                <span>Trends</span>
            </a>
            <a href="/chat" class="nav-item @(GetActiveClass("/chat"))">
                <i class="nav-icon">💬</i>
                <span>Chat</span>
            </a>
            <a href="/chat-history" class="nav-item @(GetActiveClass("/chat-history"))">
                <i class="nav-icon">📜</i>
                <span>Chat History</span>
            </a>
            <a href="/content" class="nav-item @(GetActiveClass("/content"))">
                <i class="nav-icon">📁</i>
                <span>My Content</span>
            </a>
        }

        @* Doctor-specific pages *@
        @if (AuthService.CurrentUser?.RoleId == 2) // Doctor
        {
            <a href="/users" class="nav-item @(GetActiveClass("/users"))">
                <i class="nav-icon">👥</i>
                <span>My Patients</span>
            </a>
            <a href="/journal" class="nav-item @(GetActiveClass("/journal"))">
                <i class="nav-icon">📝</i>
                <span>Patient Journal</span>
            </a>
            <a href="/chat" class="nav-item @(GetActiveClass("/chat"))">
                <i class="nav-icon">💬</i>
                <span>AI Assistant</span>
            </a>
            <a href="/chat-history" class="nav-item @(GetActiveClass("/chat-history"))">
                <i class="nav-icon">📜</i>
                <span>Chat History</span>
            </a>
            <a href="/content" class="nav-item @(GetActiveClass("/content"))">
                <i class="nav-icon">📁</i>
                <span>Patient Content</span>
            </a>
        }

        @* Admin-specific pages *@
        @if (AuthService.CurrentUser?.RoleId == 3) // Admin
        {
            <a href="/admin" class="nav-item @(GetActiveClass("/admin"))">
                <i class="nav-icon">⚙️</i>
                <span>Admin Panel</span>
            </a>
            <a href="/users" class="nav-item @(GetActiveClass("/users"))">
                <i class="nav-icon">👥</i>
                <span>All Patients</span>
            </a>
            <a href="/chat" class="nav-item @(GetActiveClass("/chat"))">
                <i class="nav-icon">💬</i>
                <span>AI Assistant</span>
            </a>
            <a href="/chat-history" class="nav-item @(GetActiveClass("/chat-history"))">
                <i class="nav-icon">📜</i>
                <span>Chat History</span>
            </a>
            <a href="/content" class="nav-item @(GetActiveClass("/content"))">
                <i class="nav-icon">📁</i>
                <span>All Content</span>
            </a>
        }
    </nav>

    <div class="nav-menu-footer">
        <button class="nav-item about-button" @onclick="ShowAbout">
            <i class="nav-icon">ℹ️</i>
            <span>About</span>
        </button>
    </div>
</div>

@using SM_MentalHealthApp.Client.Services
@inject DialogService DialogService
@inject IAuthService AuthService
@inject NavigationManager Navigation

@code {
    private string GetActiveClass(string path)
    {
        // This would need to be implemented with proper routing detection
        return "";
    }

    private void ShowAbout()
    {
        DialogService.Open("About", ds =>
        @<div>
            <h4>Health Journal</h4>
            <p>A compassionate AI-powered journaling app for health tracking and support.</p>
            <p>Built with Blazor WebAssembly and powered by Hugging Face AI models.</p>
        </div>,
        new DialogOptions() { Width = "500px", Resizable = true, Draggable = true });
    }

    private async Task Logout()
    {
        var confirmed = await DialogService.Confirm("Are you sure you want to logout?", "Logout Confirmation",
        new ConfirmOptions() { OkButtonText = "Yes, Logout", CancelButtonText = "Cancel" });

        if (confirmed == true)
        {
            await AuthService.LogoutAsync();
            Navigation.NavigateTo("/login");
        }
    }
}
