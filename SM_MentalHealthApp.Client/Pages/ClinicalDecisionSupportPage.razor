@page "/clinical-decision-support"
@using SM_MentalHealthApp.Shared
@using SM_MentalHealthApp.Client.Services
@inject HttpClient Http
@inject IAuthService AuthService
@inject IJSRuntime JSRuntime

<PageTitle>AI Clinical Decision Support</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="fas fa-brain me-2"></i>AI Clinical Decision Support</h2>
                <div class="text-muted">
                    <small>Powered by AI to assist with clinical decisions and recommendations</small>
                </div>
            </div>

            <!-- Clinical Decision Support Component -->
            <ClinicalDecisionSupport Patients="@assignedPatients" />
        </div>
    </div>
</div>

<style>
    .container-fluid {
        padding: 20px;
    }

    h2 {
        color: #2c3e50;
        font-weight: 600;
    }

    .text-muted {
        font-style: italic;
    }
</style>

@code {
    private List<User> assignedPatients = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadPatients();
    }

    private async Task LoadPatients()
    {
        try
        {
            // Load patients based on user role
            if (AuthService.CurrentUser?.RoleId == 2) // Doctor - only assigned patients
            {
                var patientsResponse = await
                Http.GetFromJsonAsync<List<User>>($"api/admin/doctor/{AuthService.CurrentUser.Id}/patients");
                assignedPatients = patientsResponse ?? new();
            }
            else if (AuthService.CurrentUser?.RoleId == 3) // Admin - all patients
            {
                var patientsResponse = await Http.GetFromJsonAsync<List<User>>("api/admin/patients");
                assignedPatients = patientsResponse ?? new();
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", $"Error loading patients: {ex.Message}");
            assignedPatients = new();
        }
    }
}
